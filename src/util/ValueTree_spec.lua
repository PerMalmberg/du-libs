require("util/Table")
local ValueTree = require("util/ValueTree")

describe("ValueTree", function()
    it("Empty returns emtpy table", function()
        local tree = ValueTree.New()
        assert.are_equal(0, TableLen(tree.Pick()))
    end)

    it("Can add values to the root", function()
        local tree = ValueTree.New()
        tree.Set("foo", 1)
        tree.Set("bar", 2)
        local data = tree.Pick()
        assert.are_equal(1, data.foo)
        assert.are_equal(2, data.bar)

        -- Data empty after picking
        assert.are_equal(0, TableLen(tree.Pick()))
    end)

    it("Can add values in sub branches", function()
        local tree = ValueTree.New()
        tree.Set("foo/bar/a/b/c", 123)
        tree.Set("foo/bar/d/e/f", 456)
        local data = tree.Pick()
        assert.are_equal(123, data.foo.bar.a.b.c)
        assert.are_equal(456, data.foo.bar.d.e.f)
    end)

    it("Can add values in sub branches that has values", function()
        local tree = ValueTree.New()
        tree.Set("foo/bar/a", 123)
        tree.Set("foo/bar/b/c", 456)
        local data = tree.Pick()
        assert.are_equal(123, data.foo.bar.a)
        assert.are_equal(456, data.foo.bar.b.c)
    end)

    it("Can replace data", function()
        local tree = ValueTree.New()
        tree.Set("foo/bar", 123)
        tree.Set("foo/bar", 456)
        local data = tree.Pick()
        assert.are_equal(456, data.foo.bar)
    end)
end)
